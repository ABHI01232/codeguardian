version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: codeguardian-postgres
    environment:
      POSTGRES_DB: codeguardian
      POSTGRES_USER: codeguardian
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - codeguardian-network

  redis:
    image: redis:7-alpine
    container_name: codeguardian-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - codeguardian-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: codeguardian-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - codeguardian-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: codeguardian-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - codeguardian-network

  # Optional: Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: codeguardian-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - codeguardian-network

volumes:
  postgres_data:
  redis_data:

networks:
  codeguardian-network:
    driver: bridge