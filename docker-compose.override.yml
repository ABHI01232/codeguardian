# Development overrides for docker-compose.yml
# This file is automatically loaded by docker-compose and provides development-specific configurations

services:
  # API Gateway with auto-rebuild
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
      # Force rebuild on every up
      cache_from: []
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: your-256-bit-secret-key-for-jwt-token-generation-keep-it-secure-and-change-this-in-production
    depends_on:
      - postgres
      - redis
      - kafka
    # Enable hot reloading in development
    volumes:
      - ./api-gateway/src:/app/api-gateway/src:ro
    command: ["java", "-jar", "api-gateway/target/api-gateway-1.0.0-SNAPSHOT.jar", "--spring.profiles.active=docker", "--spring.devtools.restart.enabled=true"]

  # Git Processor with auto-rebuild
  git-processor:
    build:
      context: .
      dockerfile: git-processor/Dockerfile
      cache_from: []
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USERNAME: codeguardian
      DB_PASSWORD: codeguardian123
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      GITHUB_WEBHOOK_SECRET: your-github-webhook-secret
      GITLAB_WEBHOOK_TOKEN: your-gitlab-webhook-token
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./git-processor/src:/app/git-processor/src:ro

  # Code Analyzer with auto-rebuild
  code-analyzer:
    build:
      context: .
      dockerfile: code-analyzer/Dockerfile
      cache_from: []
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USERNAME: codeguardian
      DB_PASSWORD: codeguardian123
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./code-analyzer/src:/app/code-analyzer/src:ro

  # Frontend with auto-rebuild
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      cache_from: []
    depends_on:
      - api-gateway
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro

  # Add health checks for proper dependency management
  postgres:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codeguardian"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy

  zookeeper:
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5