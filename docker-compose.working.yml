# Working Docker Compose setup
# This version focuses on running services that can be easily built

services:
  # Database
  postgres:
    image: postgres:14-alpine
    container_name: codeguardian-postgres
    environment:
      POSTGRES_DB: codeguardian
      POSTGRES_USER: codeguardian
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codeguardian"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codeguardian-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: codeguardian-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codeguardian-network

  # Kafka setup
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: codeguardian-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codeguardian-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: codeguardian-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codeguardian-network

  # Mock API service (for testing frontend)
  mock-api:
    image: wiremock/wiremock:latest
    container_name: codeguardian-mock-api
    ports:
      - "8080:8080"
    volumes:
      - ./mock-data:/home/wiremock
    command: ["--port", "8080", "--verbose"]
    networks:
      - codeguardian-network

volumes:
  postgres_data:

networks:
  codeguardian-network:
    driver: bridge